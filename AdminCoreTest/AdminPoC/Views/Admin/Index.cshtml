@using NonFactors.Mvc.Grid
@model AdminPoC.ViewModels.IndexViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
    <link href="/css/mvc-grid.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>

@Html.ActionLink(
    "Create",
    "Create",
    new { },
    new
    {
        @class = "btn btn-dark"
    })
<div>
    @(Html
        .Grid(Model.Entities)
        .Build(columns =>
        {
            foreach (var column in Model.Columns)
            {
                columns
                    .Add(column.Func)
                    .Titled(column.Name)
                    .Named(column.Name)
                    .Sortable(true)
                    .Filterable(true);
            }

            foreach (var action in Model.Actions)
            {
                columns.Add(model =>
                    Html.ActionLink(
                        action.Name,
                        action.Action,
                        ViewContext.RouteData.Values["controller"].ToString(),
                        new
                        {
                            id = model.PrimaryKey,
                        },
                        new { }
                        ));
            }
        })
        .Using(GridFilterMode.Header)
        .Empty("No data found")
        .Filterable()
        .Sortable()
        .Pageable())
</div>
<script src="/js/mvc-grid.js"></script>
<script>

           document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
        </script>
</body>
</html>